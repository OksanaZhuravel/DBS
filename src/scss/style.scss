@use 'sass:math';

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import 'base/mixins';

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
// @import url(https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap);
// @import url(https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700&display=swap);
// @import url(https://fonts.googleapis.com/css?family=Koulen:400&display=swap);
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
@import 'fonts/fonts';

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
@import 'fonts/icons';

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: 'Roboto Condensed', sans-serif;
$fontSize: rem(16); // где 14(px) - размер шрифта по умолчанию из макета
$fontWeight: 400;
// Основные цвета
$mainColor: #8d959b; // Цвет шрифта по умолчанию
$dark__text: #8d959b;
$border: #979797; // border
$color__green: #00b948;
$color__yellow: #ffd109;
$color__red: #d51130;
$LightGray: #fdfdfd;
$dark__grey__blue: #434c52;
$LightGray2: #e7e7e7;
$Very-dark-blue: #22272a;
$Back: #f7f7f7;
$bag: #ffffff;
$dark: #393939;
$buttonHover: #4e5960;
$buttonAccess: #00ce50;
$productItem: #e5e7ec;
$connection: #dbdbdb;
// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1366;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1134;
$maxWidthContainerAbout: 753;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 48;
$containerPaddingAbout: 612;
// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;
$containerWidthAbout: $maxWidthContainerAbout + $containerPaddingAbout;
// Брейк-поинты
$pc: em(
  $containerWidth
); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import 'base/null';

body {
  // Скролл заблокирован
  .lock & {
    overflow: hidden;
    touch-action: none;
  }
  // Сайт загружен
  // .loaded & {
  // }
}
// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
  min-height: 100%;
  display: grid;
  // flex-direction: column;
  overflow: hidden;
  // Прижимаем footer
  > main {
    flex: 1 1 auto;
  }
  // Фикс для слайдеров
  > * {
    min-width: 0;
  }
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
  // Отзывчивая
  [class*='__container'] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
  [class='access__container'] {
    @if ($maxWidthContainerAbout>0) {
      max-width: rem($maxWidthContainerAbout);
    }
    @if ($containerPaddingAbout>0) {
      padding: 0 rem(math.div($containerPaddingAbout, 2));
    }
  }
  [class='about__container'] {
    @if ($maxWidthContainerAbout>0) {
      max-width: rem($maxWidthContainerAbout);
    }
    @if ($containerPaddingAbout>0) {
      padding: 0 rem(math.div($containerPaddingAbout, 2));
    }
  }
  [class='prices__container'] {
    @if ($maxWidthContainerAbout>0) {
      max-width: rem($maxWidthContainerAbout);
    }
    @if ($containerPaddingAbout>0) {
      padding: 0 rem(math.div($containerPaddingAbout, 2));
    }
  }
  [class='privacy__container'] {
    @if ($maxWidthContainerAbout>0) {
      max-width: rem($maxWidthContainerAbout);
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
  [class='policy__container'] {
    @if ($maxWidthContainerAbout>0) {
      max-width: rem($maxWidthContainerAbout);
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
  [class='environment__container'] {
    @if ($maxWidthContainerAbout>0) {
      max-width: rem($maxWidthContainerAbout);
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
  // [class='benefits__container'] {
  //   @if ($maxWidthContainerAbout>0) {
  //     max-width: rem($maxWidthContainerAbout);
  //   }
  //   @if ($containerPadding>0) {
  //     padding: 0 rem(math.div($containerPadding, 2));
  //   }
  // }
} @else {
  // По брейк-поинтам
  [class*='__container'] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import 'base';

// Подключение стилей общих элементов проекта
@import 'common';

// Подключение стилей отдельных блоков
@import 'header';
@import 'footer';

// Подключение стилей  страниц

@import 'main';
@import 'solutions';
@import 'about';
@import 'prices';
@import 'privacy';
@import 'policy';
@import 'product';
.page {
  &__capabilities {
  }
  &__platform {
  }
  &-prices {
  }
  &__implementation {
  }

  &-about {
  }
  &__application {
  }
  &__cause {
  }
  &__purchasing {
    position: relative;
    z-index: 3;
  }
  &__company {
  }
  &__work {
  }
  &__access {
  }
  &-privacy {
  }
  &-policy {
  }
  &-product {
  }
  &-environment {
  }
  &-system {
  }
  &-benefits {
  }
  &-connection {
  }
}
.nowrap {
  white-space: nowrap;
}
